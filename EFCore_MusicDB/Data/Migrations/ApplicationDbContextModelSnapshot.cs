// <auto-generated />
using System;
using EFCore_MusicDB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreMusicDB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.ArtistEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InstragramUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1991, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstragramUrl = "https://www.instagram.com/nfrealmusic/",
                            Name = "NF"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1981, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joakim_broden@gmail.com",
                            InstragramUrl = "https://www.instagram.com/sabaton/",
                            Name = "Sabaton",
                            Phone = "+46701234567"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1963, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "yngwie_j_malmsteen_sverige@gmail.com",
                            Name = "Yngwie J. Malmsteen"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1935, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elvis Presley"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1993, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstragramUrl = "https://www.instagram.com/arianagrande/",
                            Name = "Ariana Grande"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1958, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "madonnaUS@hotmail.com",
                            InstragramUrl = "https://www.instagram.com/madonna/",
                            Name = "Madonna",
                            Phone = "+15551234567"
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1996, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kim_jenniequeen@gmail.com",
                            InstragramUrl = "https://www.instagram.com/jennierubyjane/",
                            Name = "Kim Jennie",
                            Phone = "+9102225207641"
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(1996, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chungha_korea@gmail.com",
                            InstragramUrl = "https://www.instagram.com/chungha_official/",
                            Name = "Chung Ha"
                        });
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.ArtistSongEntity", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSongEntity");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            ArtistId = 2,
                            SongId = 2
                        },
                        new
                        {
                            ArtistId = 3,
                            SongId = 3
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 4
                        },
                        new
                        {
                            ArtistId = 5,
                            SongId = 5
                        },
                        new
                        {
                            ArtistId = 6,
                            SongId = 6
                        },
                        new
                        {
                            ArtistId = 7,
                            SongId = 7
                        },
                        new
                        {
                            ArtistId = 8,
                            SongId = 8
                        });
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Metal"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Pop"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Rap"
                        },
                        new
                        {
                            Id = 5,
                            Title = "K-Pop"
                        });
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.SongEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 238,
                            GenreId = 4,
                            ReleaseDate = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Remember This"
                        },
                        new
                        {
                            Id = 2,
                            Duration = 306,
                            GenreId = 2,
                            ReleaseDate = new DateTime(2008, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Art Of War"
                        },
                        new
                        {
                            Id = 3,
                            Duration = 312,
                            GenreId = 2,
                            ReleaseDate = new DateTime(1988, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hold On"
                        },
                        new
                        {
                            Id = 4,
                            Duration = 136,
                            GenreId = 1,
                            ReleaseDate = new DateTime(1956, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hound Dog"
                        },
                        new
                        {
                            Id = 5,
                            Duration = 179,
                            GenreId = 3,
                            ReleaseDate = new DateTime(2019, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "7 rings"
                        },
                        new
                        {
                            Id = 6,
                            Duration = 190,
                            ReleaseDate = new DateTime(1984, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Like A Virgin"
                        },
                        new
                        {
                            Id = 7,
                            Duration = 175,
                            GenreId = 5,
                            ReleaseDate = new DateTime(2018, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Solo"
                        },
                        new
                        {
                            Id = 8,
                            Duration = 210,
                            GenreId = 5,
                            ReleaseDate = new DateTime(2019, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Snapping"
                        });
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.ArtistSongEntity", b =>
                {
                    b.HasOne("EFCore_MusicDB.Data.Entities.ArtistEntity", "Artist")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore_MusicDB.Data.Entities.SongEntity", "Song")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.SongEntity", b =>
                {
                    b.HasOne("EFCore_MusicDB.Data.Entities.GenreEntity", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.ArtistEntity", b =>
                {
                    b.Navigation("ArtistSongs");
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.GenreEntity", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("EFCore_MusicDB.Data.Entities.SongEntity", b =>
                {
                    b.Navigation("ArtistSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
